{"version":3,"sources":["map-dashboard.component.ts"],"names":[],"mappings":"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","file":"map-dashboard.component.js","sourcesContent":["import { CategoryFilter } from '../models/category-filter';\nimport { ConditionFilter } from '../models/condition-filter';\nimport { Component, AfterViewInit, ElementRef, OnDestroy, ComponentRef, ViewChild } from '@angular/core';\nimport { MenuItem } from 'primeng/api/menuitem';\nimport { TreeNode } from 'primeng/api/treenode';\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/images/marker-icon.png';\nimport 'leaflet/dist/images/marker-icon-2x.png';\nimport { IconUtils } from '../../../shared/misc/icon-utils';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport { MapDashboardService } from '../services/map-dashboard.service';\nimport { PopupService } from '../services/popup-service';\nimport { Entity } from 'src/app/shared/models/entity';\nimport { ModelDto } from 'src/app/shared/models/model-dto';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseComponent } from 'src/app/shared/misc/base.component';\nimport { Utils } from '../../../shared/misc/utils';\nimport { AppMessageService } from 'src/app/shared/services/app-message-service';\nimport { ConfirmationService } from 'primeng/api';\nimport { Router } from '@angular/router';\nimport { EntityFilter } from '../models/category-filter';\nimport { PopupComponent } from 'src/app/shared/templates/popup/popup.component';\nimport { OverlayPanel } from 'primeng/overlaypanel/public_api';\nimport { LayerTreeNodeService } from '../services/layer-tree-node.service';\nimport { CategoryService } from '../services/category-service';\nimport { TreeNodeService } from 'src/app/shared/services/tree-node.service';\nimport { Observable, combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'app-map-dashboard',\n    templateUrl: './map-dashboard.component.html',\n    styleUrls: ['./map-dashboard.component.scss'],\n})\nexport class MapDashboardComponent extends BaseComponent implements AfterViewInit, OnDestroy {\n\n    public categories: CategoryFilter[];\n    public entities: EntityFilter[] = [];\n    public menuItems: MenuItem[];\n    public layers: TreeNode[];\n    public selectedLayers: TreeNode[];\n    public showButtons: boolean = false;\n    public favChecked: boolean = true;\n    public favAttrs: { entity: string, favAttr: string }[] = [];\n    public displayDebug: boolean;\n    public displayDebugHeader: string;\n    public displayDebugContent: Entity;\n\n    private colors: any = {low:\"#28a746\",moderate:\"#5894f4\",high:\"#ffc107\",very_high:\"#ec7628\",extreme:\"#dc3546\"};\n    private intervalRefreshMilliseconds: number = 60000;\n    private entityAttr: string = 'data';\n    private map: L.Map;\n    private latCenter: number = -34.0736;\n    private longCenter: number = -64.7647;\n    private markerClusterGroup: L.MarkerClusterGroup = L.markerClusterGroup({ animate: true, showCoverageOnHover: false });\n    private layerGroups: { [key: string]: L.LayerGroup } = {};\n    private layersBeforeFilter: L.Layer[];\n    private removedLayers: L.Layer[] = [];\n    private filters: ConditionFilter[] = [];\n    private unselectedLayers: any[] = [];\n    public currentModels: ModelDto[] = [];\n    private markersByModelAndId: any = {};\n    private firstFetch: boolean = true;\n    private interval: any;\n    private minLat: number = Number.POSITIVE_INFINITY;\n    private minLon: number = Number.POSITIVE_INFINITY;\n    private maxLat: number = Number.NEGATIVE_INFINITY;\n    private maxLon: number = Number.NEGATIVE_INFINITY;\n    private defaultZoom: number = 10;\n    private firstLoad: boolean = true;\n    private tooltipMaxChars: number = 25;\n    private filteredAttrs: any = {};\n\n    @ViewChild('layerConditionsPanel') private layerConditionsPanel: OverlayPanel;\n    @ViewChild('layerPanel') private layerPanel: OverlayPanel;\n\n\n    constructor(\n        private mapDashBoardService: MapDashboardService,\n        private categoryService: CategoryService,\n        private layerTreeNodeService: LayerTreeNodeService,\n        private treeNodeService: TreeNodeService,\n        private popupService: PopupService,\n        private appMessageService: AppMessageService,\n        private confirmationService: ConfirmationService,\n        private router: Router,\n        private elem: ElementRef,\n    ) {\n        super();\n    }\n\n    public ngAfterViewInit(): void {\n        this.loadAllEntitiesForLayers();\n        this.loadMap();\n        this.loadSearchBar();\n        this.visualizeEntities();\n    }\n\n    public ngOnDestroy(): void {\n        clearInterval(this.interval);\n    }\n\n    /*****************************************************************************\n     Event functions\n    *****************************************************************************/\n\n    public onNodeSelect(event: any): void {\n        const i: number = this.unselectedLayers.indexOf(event.node.data);\n        this.unselectedLayers.splice(i, 1);\n        this.markerClusterGroup.addLayer(this.layerGroups[event.node.data]);\n        this.closeTooltipsIfNeeded();\n        this.setFilters();\n    }\n\n    public onNodeUnselect(event: any): void {\n        this.unselectedLayers.push(event.node.data);\n        this.markerClusterGroup.removeLayer(this.layerGroups[event.node.data]);\n    }\n\n    public onEventFilters(event: ConditionFilter[]): void {\n        this.filters = event;\n        this.storeFilterAttrs(event);\n        clearInterval(this.interval);\n        this.startInterval();\n        this.updateEntities(true);\n    }\n\n    public onFavChange(event: any): void {\n        this.markerClusterGroup.getLayers().forEach(l => {\n            event.checked && l.getTooltip() ? this.openTooltip(l as L.Marker) : l.closeTooltip();\n        });\n    }\n\n    public onLayerConditionClick(event: any): void {\n        if (this.layerPanel.overlayVisible) { this.layerPanel.hide(); }\n        event.stopPropagation();\n        this.layerConditionsPanel.toggle(event);\n    }\n\n    public onLayerClick(event: any): void {\n        if (this.layerConditionsPanel.overlayVisible) { this.layerConditionsPanel.hide(); }\n        event.stopPropagation();\n        this.layerPanel.toggle(event);\n    }\n\n    public onCenterClick(): void {\n        this.map.flyTo([this.latCenter, this.longCenter], this.defaultZoom);\n    }\n\n    /*****************************************************************************\n     Map loading functions\n    *****************************************************************************/\n\n    private loadMap(): void {\n        this.map = L.map('map', {\n            center: [this.latCenter, this.longCenter],\n            zoom: this.defaultZoom,\n            minZoom: 1,\n            maxBounds: L.latLngBounds(L.latLng(-90, -180), L.latLng(90, 180)),\n            maxBoundsViscosity: 0.5,\n            doubleClickZoom: true,\n        });\n\n        this.setTileLayer();\n        this.map.addLayer(this.markerClusterGroup);\n        this.setZoomStartEvent();\n        this.setAnimationEndEvent();\n    }\n    private setTileLayer(): void {\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n            maxNativeZoom: 19,\n            maxZoom: 19,\n        }).addTo(this.map);\n    }\n\n    private setZoomStartEvent(): void {\n        this.map.on('zoomstart', (event) => {\n            this.markerClusterGroup.getLayers().forEach(l => {\n                if (l.getTooltip()) {\n                    const elements: NodeList = this.elem.nativeElement.querySelectorAll('.leaflet-tooltip-pane');\n                    elements.forEach((e: HTMLElement) => e.style.display = 'none');\n                }\n            });\n        });\n    }\n\n    private setAnimationEndEvent(): void {\n        this.markerClusterGroup.on('animationend', () => {\n            this.markerClusterGroup.getLayers().forEach(l => {\n                this.openTooltip(l as L.Marker);\n            });\n        });\n    }\n\n    private loadSearchBar(): void {\n        const searchControl: GeoSearchControl = new GeoSearchControl({\n            provider: new OpenStreetMapProvider(),\n            autoClose: true,\n        });\n\n        this.map.addControl(searchControl);\n    }\n\n    private adjustView(): void {\n        this.firstLoad = false;\n        if (this.minLat !== Number.POSITIVE_INFINITY && this.minLon !== Number.POSITIVE_INFINITY &&\n            this.maxLat !== Number.NEGATIVE_INFINITY && this.maxLon !== Number.NEGATIVE_INFINITY) {\n            const lat: number = (this.minLat + this.maxLat) / 2;\n            const lon: number = (this.minLon + this.maxLon) / 2;\n            if (!isNaN(lat) && !isNaN(lon)) {\n                this.map.setView([lat, lon], this.defaultZoom);\n            }\n        }\n    }\n\n    private loadMarkerCluster(): void {\n        Object.values(this.layerGroups).forEach(lg => {\n            this.markerClusterGroup.addLayer(lg);\n        });\n    }\n\n    /*****************************************************************************\n     Filter functions\n    *****************************************************************************/\n\n    private setFilters(): void {\n        this.markerClusterGroup.addLayers(this.removedLayers);\n        this.closeTooltipsIfNeeded();\n        this.removedLayers = [];\n        if (!this.layersBeforeFilter) {\n            this.layersBeforeFilter = this.markerClusterGroup.getLayers();\n        }\n        this.removeLayersForFilters();\n    }\n\n    private storeFilterAttrs(filters: ConditionFilter[]): void {\n        this.filteredAttrs = {};\n        filters.forEach(f => {\n            if (!this.filteredAttrs[f.entity]) { this.filteredAttrs[f.entity] = []; }\n            this.filteredAttrs[f.entity].push(f.attribute);\n        });\n    }\n\n    private removeLayersForFilters(): void {\n        const layersToRemove: L.Layer[] = [];\n        this.markerClusterGroup.getLayers().forEach(layer => {\n            this.filters.forEach(f => {\n                if (f.selected && layer[this.entityAttr][f.attribute] && layer[this.entityAttr].type === f.entity) {\n                    if (this.applyFilter(layer, f, this.entityAttr)) {\n                        layersToRemove.push(layer);\n                        this.removedLayers.push(layer);\n                    }\n                }\n            });\n        });\n        this.markerClusterGroup.removeLayers(layersToRemove);\n    }\n\n    private applyFilter(layer: L.Layer, f: ConditionFilter, controlName: string): boolean {\n        let shouldBeRemoved: boolean = false;\n\n        if (f.condition !== 'contains') {\n            shouldBeRemoved = !Utils.mathItUp[f.condition](Number(layer[controlName][f.attribute]), Number(f.value));\n        } else {\n            shouldBeRemoved = !JSON.stringify(layer[controlName][f.attribute]).includes(f.value);\n        }\n\n        return shouldBeRemoved;\n    }\n\n    private loadAllEntitiesForLayers(): void {\n        this.mapDashBoardService.getAllEntitiesForLayers().pipe(takeUntil(this.destroy$)).subscribe(\n            (res: EntityFilter[]) => {\n                this.entities = this.mapCategories(res);\n                this.loadLayerMenu();\n            },\n            err => {\n                this.onLoadDataFail();\n            });\n    }\n\n    private mapCategories(entities: EntityFilter[]): EntityFilter[] {\n        this.categories = [];\n\n        entities.forEach((entity) => {\n            const categoryKey: string = this.categoryService.getCategoryKey(entity.name);\n            const categoryExist: CategoryFilter = this.categories.find((category) => category.name === categoryKey);\n            entity.label = entity.name;\n            !categoryExist ? this.addCategory(categoryKey, entity) : categoryExist.entities.push(entity);\n        });\n\n        return entities;\n    }\n\n    private addCategory(categoryKey: string, entity: EntityFilter): void {\n        this.categories.push({\n            name: categoryKey,\n            label: IconUtils.categoryName[categoryKey],\n            icon: IconUtils.icons[categoryKey],\n            entities: [entity],\n        });\n    }\n\n    private applyFiltersAfterUpdating(markersWithNewLocation: L.Marker[]): void {\n        markersWithNewLocation.forEach(m => {\n            const currentLocation: number[] = m[this.entityAttr].location.coordinates;\n            m.setLatLng(currentLocation.slice().reverse() as L.LatLngExpression);\n        });\n        this.setFilters();\n        this.unselectedLayers.forEach(l => this.markerClusterGroup.removeLayer(this.layerGroups[l]));\n        this.closeTooltipsIfNeeded();\n    }\n\n    /*****************************************************************************\n     Layers functions\n    *****************************************************************************/\n\n    private loadLayerMenu(): void {\n        this.layers = this.layerTreeNodeService.getMainLayers(this.categories);\n        this.selectedLayers = this.treeNodeService.getAllSelected(this.layers);\n    }\n\n    /*****************************************************************************\n     Data loading functions\n    *****************************************************************************/\n\n    private visualizeEntities(): void {\n        this.loadEntities();\n\n    }\n\n    private loadEntities(): void {\n        this.mapDashBoardService.getEntitiesData(!this.firstLoad).pipe(takeUntil(this.destroy$)).subscribe(\n            (models: ModelDto[]) => {\n                if (models.length > 0) {\n                    this.showButtons = true;\n                    this.onLoadEntitiesSuccess(models);\n                } else {\n                    this.showButtons = false;\n                    this.onLoadEntitiesEmpty();\n                }\n            },\n            err => {\n                this.onLoadDataFail();\n            });\n    }\n\n    private onLoadEntitiesSuccess(models: ModelDto[]): void {\n        this.currentModels = models;\n        this.storeFavAttrs(models);\n        this.processModels(models);\n        this.adjustView();\n        this.loadMarkerCluster();\n        this.setFilters();\n        this.startInterval();\n    }\n\n    private startInterval(): void {\n        this.interval = setInterval(() => {\n            this.updateEntities();\n        }, this.intervalRefreshMilliseconds);\n    }\n\n    private updateEntities(triggeredByFilter?: boolean): void {\n        const combinedCalls: Observable<any>[] = [];\n        this.currentModels.forEach((model, i) => {\n            let obs: Observable<Entity[]>;\n            obs = this.mapDashBoardService.getEntitiesForUpdating(model, this.filteredAttrs[model.type], !triggeredByFilter);\n            combinedCalls.push(obs);\n        });\n        this.processUpdate(combinedCalls);\n    }\n\n    private processUpdate(combinedCalls: Observable<any>[]): void {\n        const markersWithNewLocation: L.Marker[] = [];\n        combineLatest(combinedCalls).pipe(takeUntil(this.destroy$)).subscribe(\n            (combinedResults) => {\n                combinedResults.forEach((entities: Entity[], i: number) => {\n                    const model: ModelDto = this.currentModels[i];\n                    entities.forEach(e => this.updateEntity(e, i, model, markersWithNewLocation));\n                });\n                this.applyFiltersAfterUpdating(markersWithNewLocation);\n            },\n            err => {\n                this.onLoadDataFail();\n            },\n        );\n    }\n\n    private processModels(models: ModelDto[]): void {\n        models.forEach((model, i) => {\n            const categoryKey: string = this.categoryService.getCategoryKey(model.type);\n            this.markersByModelAndId[i] = {};\n            this.layerGroups[model.type] = this.layerGroups[model.type] || L.layerGroup();\n            this.layerGroups[categoryKey] = this.layerGroups[categoryKey] || L.layerGroup();\n            model.data.forEach(entity => {this.addEntity(model, entity, categoryKey, i)});\n            this.layerGroups[categoryKey].addLayer(this.layerGroups[model.type]);\n        });\n    }\n\n    private onLoadEntitiesEmpty(): void {\n        if (this.firstFetch) {\n            this.firstFetch = false;\n            this.confirmationService.confirm({\n                icon: 'pi pi-info',\n                header: 'There is no configuration yet',\n                message: 'Do you want to configure the dashboard?',\n                acceptLabel: 'Configure',\n                rejectLabel: 'Cancel',\n                accept: (): void => {\n                    this.router.navigate(['/configuration']);\n                },\n            });\n        }\n    }\n\n    private onLoadDataFail(): void {\n        this.appMessageService.add({ severity: 'error', summary: 'Something went wrong getting data' });\n    }\n\n    /*****************************************************************************\n     Entity functions\n    *****************************************************************************/\n\n    private getColor(index: number): string{\n        var color: string;\n        if(index < 5){\n            color = this.colors.low;\n        }else if(index >= 5 && index < 14){\n            color = this.colors.moderate;\n        }else if(index >= 14 && index < 21){\n            color = this.colors.high;\n        }else if(index >= 21 && index < 33){\n            color = this.colors.very_high;\n        }else if(index >= 33){\n            color = this.colors.extreme;\n        }\n\n        return color;\n    }\n    private setGeoJSONattributes(model: ModelDto, entity: Entity): string{\n        var color: string;\n        color = this.getColor(entity.fireWeatherIndex);\n        const geoJSON = '{   \"fillColor\": \"'+ color +'\",' +\n                            '\"weight\": 2,'+\n                            '\"opacity\": 1,' +\n                            '\"color\": \"'+ color +'\",' +  //Outline color\n                            '\"fillOpacity\": 0.7' +\n                        '}';\n        return geoJSON;\n    }\n    private addEntity(model: ModelDto, entity: Entity, categoryKey: string, i: number): void {\n        if(entity.location && entity.location.type===\"Polygon\"){\n            const geoJSON = this.setGeoJSONattributes(model, entity);\n            L.geoJSON(entity.location, {style: JSON.parse(geoJSON)}).addTo(this.layerGroups[model.type])\n            this.storeMinMaxLocation(entity.location.coordinates[0][0][1], entity.location.coordinates[0][0][0])\n            this.insertEntity(model, entity, categoryKey, i);\n        } else{\n            if (this.isValidCoordinates(entity)) {\n                this.storeMinMaxLocation(entity.location.coordinates[1], entity.location.coordinates[0]);\n                this.insertEntity(model, entity, categoryKey, i);\n            }\n        }\n\n    }\n\n    private isValidCoordinates(entity: Entity): boolean {\n        return entity.location && entity.location.coordinates &&\n            entity.location.coordinates[0] && entity.location.coordinates[1] &&\n            !isNaN(entity.location.coordinates[0]) && !isNaN(entity.location.coordinates[1]);\n    }\n\n    private insertEntity(model: ModelDto, entity: Entity, categoryKey: string, i: number): void {\n       var marker: L.Marker;\n        if(entity.location.type===\"Point\"){\n            marker = L.marker(\n                entity.location.coordinates.slice().reverse() as L.LatLngExpression,\n                { icon: IconUtils.leafletIcons[categoryKey] },\n            );\n        }else if(entity.location.type===\"Polygon\"){\n            marker= L.marker(\n                entity.location.coordinates[0][0].slice().reverse() as L.LatLngExpression,\n                { icon: IconUtils.leafletIcons[categoryKey] },\n            );\n        }\n        \n        this.setEntityParams(marker, entity, model, i);\n        \n    }\n\n    private updateEntity(e: Entity, i: number, model: ModelDto, markersWithNewLocation: L.Marker[]): void {\n        const marker: L.Marker = this.markersByModelAndId[i][e.id];\n        if (marker && this.isValidCoordinates(e)) {\n            const currentLocation: number[] = e.location.coordinates;\n            if (this.hasLocationBeenUpdated(marker, currentLocation)) {\n                markersWithNewLocation.push(marker);\n            }\n            Object.entries(e).forEach(a => marker[this.entityAttr][a[0]] = a[1]);\n            this.setTooltip(marker, e, model);\n        }\n    }\n\n    private setEntityParams(marker: L.Marker, entity: Entity, model: ModelDto, i: number): void {\n        this.setTooltip(marker, entity, model);\n        this.setPopup(marker, entity, model);\n        marker[this.entityAttr] = entity;\n        this.markersByModelAndId[i][entity.id] = marker;\n        this.layerGroups[model.type].addLayer(marker);\n    }\n\n    private storeMinMaxLocation(lat: number, lon: number): void {\n        this.minLat = this.minLat > lat ? lat : this.minLat;\n        this.minLon = this.minLon > lon ? lon : this.minLon;\n        this.maxLat = this.maxLat < lat ? lat : this.maxLat;\n        this.maxLon = this.maxLon < lon ? lon : this.maxLon;\n    }\n\n    private hasLocationBeenUpdated(marker: L.Marker, currentLocation: number[]): boolean {\n        const currentLatLng: L.LatLng = marker.getLatLng();\n        const currentLat: number = currentLatLng.lat;\n        const currentLng: number = currentLatLng.lng;\n\n        const newLatLng: number[] = currentLocation.slice().reverse();\n        const newLat: number = newLatLng[0];\n        const newLng: number = newLatLng[1];\n\n        return currentLat !== newLat || currentLng !== newLng;\n    }\n\n    /*****************************************************************************\n     Marker event functions\n    *****************************************************************************/\n\n    private setMarkerEvents(marker: L.Marker, p: L.Popup, pRef: ComponentRef<PopupComponent>, entity: Entity, model: ModelDto): void {\n\n        marker.on('click', () => {\n            marker.isPopupOpen() ? this.closePopup(marker) : this.openPopup(marker, p, pRef, entity, model);\n        });\n\n        marker.on('popupopen', () => {\n            marker.closeTooltip();\n        });\n\n        marker.on('popupclose', () => {\n            this.openTooltip(marker);\n            marker.unbindPopup();\n        });\n\n    }\n\n    /*****************************************************************************\n     Popup functions\n    *****************************************************************************/\n\n    private setPopup(marker: L.Marker, entity: Entity, model: ModelDto): void {\n        const popup: L.Popup = L.popup();\n        const popupComponentRef: ComponentRef<PopupComponent> = this.popupService.createPopupComponent(entity, model);\n        popupComponentRef.instance.clickDebug.pipe(takeUntil(this.destroy$)).subscribe(() => this.onClickDebug(model, entity, marker));\n        popup.setContent(popupComponentRef.location.nativeElement);\n        this.setMarkerEvents(marker, popup, popupComponentRef, entity, model);\n    }\n\n    private openPopup(marker: L.Marker, p: L.Popup, pRef: ComponentRef<PopupComponent>, entity: Entity, model: ModelDto): void {\n        this.mapDashBoardService.getEntityForPopup(model, entity).pipe(takeUntil(this.destroy$)).subscribe(\n            data => {\n                const updatedEntity: Entity = data[0];\n                pRef.instance.updatePopup(updatedEntity, model);\n                pRef.changeDetectorRef.detectChanges();\n                pRef.instance.refreshScroll();\n                this.setTooltip(marker, updatedEntity, model);\n                marker.bindPopup(p);\n                marker.openPopup();\n            },\n            err => {\n                this.onLoadDataFail();\n            },\n        );\n    }\n\n    private closePopup(marker: L.Marker): void {\n        marker.closePopup();\n        marker.unbindPopup();\n    }\n\n    /*****************************************************************************\n     Tooltip functions\n    *****************************************************************************/\n\n    private setTooltip(marker: L.Marker, entity: Entity, model: ModelDto, fromDebug?: boolean): void {\n        const tooltipContent: string = this.getTooltipContent(entity, model, fromDebug);\n\n        if (tooltipContent) {\n            if (!marker.getTooltip()) {\n                marker.bindTooltip(tooltipContent, {\n                    offset: new L.Point(0, 5),\n                    direction: 'top',\n                    permanent: true,\n                    opacity: 0.9,\n                });\n            } else {\n                marker.setTooltipContent(tooltipContent);\n            }\n        }\n    }\n\n    private openTooltip(marker: L.Marker): void {\n        if (this.favChecked) {\n            if (marker.getTooltip()) {\n                const elements: NodeList = this.elem.nativeElement.querySelectorAll('.leaflet-tooltip-pane');\n                elements.forEach((e: HTMLElement) => e.style.display = 'block');\n                marker.openTooltip();\n            }\n        }\n    }\n\n    private getTooltipContent(entity: Entity, model: ModelDto, fromDebug?: boolean): string {\n        return model.favAttr && entity[model.favAttr] && (!fromDebug || (fromDebug && entity[model.favAttr].value)) ?\n            ('<span>' + this.truncateTooltipContent(fromDebug ? entity[model.favAttr].value : entity[model.favAttr]) + '</span>') :\n            undefined;\n    }\n\n    private truncateTooltipContent(content: any): string {\n        const str: string = typeof content === 'string' ? content : JSON.stringify(content);\n        return Utils.truncateString(str, this.tooltipMaxChars);\n    }\n\n    private closeTooltipsIfNeeded(): void {\n        const markers: L.Layer[] = this.markerClusterGroup.getLayers();\n        markers.forEach(m => {\n            if (!this.favChecked) { (m as L.Marker).closeTooltip(); }\n        });\n    }\n\n    /*****************************************************************************\n     Main/favourite attributes functions\n    *****************************************************************************/\n\n    private storeFavAttrs(models: ModelDto[]): void {\n        this.favAttrs = models.filter(m => m.favAttr).map(m => ({ entity: m.type, favAttr: m.favAttr }));\n    }\n\n    /*****************************************************************************\n     Debug entity functions\n    *****************************************************************************/\n\n    private onClickDebug(model: ModelDto, entity: Entity, marker: L.Marker): void {\n        this.mapDashBoardService.getEntity(model, entity).pipe(takeUntil(this.destroy$)).subscribe(\n            data => {\n                if (data.length > 0) {\n                    this.onClickDebugSuccess(data[0], marker, model);\n                } else {\n                    this.onLoadDataFail();\n                }\n            },\n            err => {\n                this.onLoadDataFail();\n            },\n        );\n    }\n\n    private onClickDebugSuccess(data: Entity, marker: L.Marker, model: ModelDto): void {\n        marker.closePopup();\n        this.displayDebugHeader = data.id;\n        this.displayDebugContent = data;\n        this.displayDebug = true;\n        this.setTooltip(marker, data, model, true);\n    }\n\n}\n"]}